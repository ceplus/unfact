import os, glob

def builder_unit_test(target, source, env):
    app = str(source[0].abspath)
    if os.spawnl(os.P_WAIT, app, app)==0:
        open(str(target[0]),'w').write("PASSED\n")
    else:
        return 1

#env = Environment(CPPPATH=['.', '..'], 
#                  LIBPATH=["c:\\Program Files\\Microsoft SDKs\\Windows\\v6.1\\Lib\\"],
#                  CPPFLAGS=["/W4", "/EHsc"])
env = Environment(CPPPATH=['.', '..', '../srclib/bdwgc/libatomic_ops-1.2/src/'], 
	          CCFLAGS=["-Wall", "-Wextra", "-g"], LIBS=["pthread"])
env.Append(BUILDERS = {'Test' :  Builder(action = builder_unit_test)})

main = env.Program('main', Glob('../src/*.cpp') + Glob('./*.cpp'), LINKFLAGS="-g")

env.Test("test.passed", main)
env.Alias("test", "test.passed")

      
